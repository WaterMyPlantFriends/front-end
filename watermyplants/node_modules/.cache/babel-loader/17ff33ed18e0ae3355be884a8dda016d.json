{"ast":null,"code":"var _jsxFileName = \"/Users/krystle/Desktop/Unit3/front-end/watermyplants/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport * as yup from 'yup';\nimport loginSchema from './validation/loginSchema';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledForm = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n    margin: 0 auto;\n    padding: 2%; 5%;\n    background-color: '#006e51';\n    color: '#313639';\n    border-style: double;\n    border-color: '#004f3a';\n    outline: 5px solid '#10ffbf';\n    h2 {\n        color: '#afffea';\n    }\n    .form-container {\n        width: 100%;\n    }\n    .errors {\n        color: '#f8f8ff';\n    }\n    .username {\n        width: 90%;\n    }\n    .username p {\n        display: inline;\n        margin-right: 1%;\n    }\n    .password {\n        width: 90%;\n    }\n    .password p {\n        display: inline;\n        margin-right: 1%;\n    }\n    #loginBtn {\n        width: 40%;\n        padding: 2%;\n        margin: 1% auto;\n    }\n`;\n_c = StyledForm;\nconst initialFormValues = {\n  username: '',\n  password: ''\n};\nconst initialFormErrors = {\n  username: '',\n  password: '',\n  loginAttempt: ''\n};\nconst initialDisabled = true;\nexport default function login(props) {\n  _s();\n\n  // state slices\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled); // functions\n\n  const validate = (name, value) => {\n    // validate with yup\n    yup.reach(loginSchema, name).validate(value).then(() => setFormErrors({ ...formErrors,\n      [name]: ''\n    })).catch(err => setFormErrors({ ...formErrors,\n      [name]: err.errors[0]\n    }));\n  };\n\n  const onChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target; // validate\n\n    validate(name, value); // update formValues\n\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const onSubmit = evt => {\n    // construct loginAttempt\n    const loginAttempt = {\n      username: formValues.username.trim(),\n      password: formValues.password.trim()\n    }; // POST login attempt\n\n    postLogin(loginAttempt);\n  };\n\n  const postLogin = loginAttempt => {\n    axios.post('https://watermyplantz.herokuapp.com/api/auth/login', loginAttempt).then(resp => {// we login successfully and get a token\n    }).catch(err => {\n      // we failed to login\n      console.error(err);\n      const loginError = { ...formErrors,\n        loginAttempt: 'Login failed. Please try again.'\n      };\n      setFormErrors = loginError;\n    }).finally(() => setFormValues(initialFormValues));\n  }; // update login button when formValues change\n\n\n  useEffect(() => {\n    loginSchema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]); // return Login element\n\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.loginAttempt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            value: values.username,\n            onChange: onChange,\n            name: \"username\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            value: values.password,\n            onChange: onChange,\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"loginBtn\",\n        disabled: disabled,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(login, \"E6hjptUmci94DZY/5Zr2kRydSKg=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledForm\");","map":{"version":3,"sources":["/Users/krystle/Desktop/Unit3/front-end/watermyplants/src/components/login.js"],"names":["React","useState","useEffect","axios","styled","yup","loginSchema","StyledForm","form","initialFormValues","username","password","initialFormErrors","loginAttempt","initialDisabled","login","props","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","validate","name","value","reach","then","catch","err","errors","onChange","evt","target","onSubmit","trim","postLogin","post","resp","console","error","loginError","finally","isValid","valid","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport * as yup from 'yup';\nimport loginSchema from './validation/loginSchema';\n\nconst StyledForm = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n    margin: 0 auto;\n    padding: 2%; 5%;\n    background-color: '#006e51';\n    color: '#313639';\n    border-style: double;\n    border-color: '#004f3a';\n    outline: 5px solid '#10ffbf';\n    h2 {\n        color: '#afffea';\n    }\n    .form-container {\n        width: 100%;\n    }\n    .errors {\n        color: '#f8f8ff';\n    }\n    .username {\n        width: 90%;\n    }\n    .username p {\n        display: inline;\n        margin-right: 1%;\n    }\n    .password {\n        width: 90%;\n    }\n    .password p {\n        display: inline;\n        margin-right: 1%;\n    }\n    #loginBtn {\n        width: 40%;\n        padding: 2%;\n        margin: 1% auto;\n    }\n`\n\nconst initialFormValues = {\n    username: '',\n    password: '',\n}\nconst initialFormErrors = {\n    username: '',\n    password: '',\n    loginAttempt: '',\n}\nconst initialDisabled=true;\n\nexport default function login(props) {\n    // state slices\n    const [formValues, setFormValues] = useState(initialFormValues);\n    const [formErrors, setFormErrors] = useState(initialFormErrors);\n    const [disabled, setDisabled] = useState(initialDisabled);\n    // functions\n    const validate = (name, value) => {\n        // validate with yup\n        yup.reach(loginSchema, name)\n            .validate(value)\n            .then(() => setFormErrors({ ...formErrors, [name]: '' }))\n            .catch(err => setFormErrors({ ...formErrors, [name]: err.errors[0] }))\n    }\n    const onChange = evt => {\n        const { name, value } = evt.target;\n        // validate\n        validate(name, value);\n        // update formValues\n        setFormValues({\n            ...formValues,\n            [name]: value,\n        })\n    }\n    const onSubmit = evt => {\n        // construct loginAttempt\n        const loginAttempt = {\n            username: formValues.username.trim(),\n            password: formValues.password.trim(),\n        }\n        // POST login attempt\n        postLogin(loginAttempt);\n    }\n    const postLogin = loginAttempt => {\n        axios.post('https://watermyplantz.herokuapp.com/api/auth/login', loginAttempt)\n            .then(resp => {\n                // we login successfully and get a token\n\n            })\n            .catch(err => {\n                // we failed to login\n                console.error(err);\n                const loginError = {\n                    ...formErrors,\n                    loginAttempt: 'Login failed. Please try again.',\n                }\n                setFormErrors=loginError;\n            })\n            .finally(() => setFormValues(initialFormValues))\n    }\n    // update login button when formValues change\n    useEffect(() => {\n        loginSchema.isValid(formValues)\n            .then(valid => setDisabled(!valid));\n    }, [formValues]);\n\n    // return Login element\n    return (\n        <StyledForm onSubmit={onSubmit}>\n            <h2>Login</h2> \n            <div className='errors'>\n                {/* errors here */}\n                <div>{errors.username}</div>\n                <div>{errors.password}</div>\n                <div>{errors.loginAttempt}</div>\n            </div>\n            {/* Form */}\n            <div className='form-container'>\n                <div className='username'>\n                    <label><p>Username</p>\n                        <input\n                            id='username'\n                            value={values.username}\n                            onChange={onChange}\n                            name='username'\n                            type='text'\n                        />\n                    </label>\n                </div>\n                <div className='password'>\n                    <label><p>Password</p>\n                        <input\n                            id='password'\n                            value={values.password}\n                            onChange={onChange}\n                            name='password'\n                            type='password'\n                        />\n                    </label>\n                </div>\n                <button type='submit' id='loginBtn' disabled={disabled}>Login</button>\n            </div>\n        </StyledForm>\n    )\n    \n}"]},"metadata":{},"sourceType":"module"}